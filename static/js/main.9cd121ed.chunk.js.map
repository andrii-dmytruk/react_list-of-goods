{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleAlpabetSort","setState","ALPABET","handleLengthSort","LENGTH","handleReverse","handleReset","this","visibleGoods","goods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,gHAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,kBAAoB,WAClB,EAAKC,UAAS,SAAAL,GAAK,kCACdA,GADc,IAEjBE,SAAUL,EAASS,cATzB,EAaEC,iBAAmB,WACjB,EAAKF,UAAS,SAAAL,GAAK,kCACdA,GADc,IAEjBE,SAAUL,EAASW,aAhBzB,EAoBEC,cAAgB,WACd,EAAKJ,UAAS,SAAAL,GAAK,kCACdA,GADc,IAEjBC,YAAaD,EAAMC,iBAvBzB,EA2BES,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA9BzB,4CAkCE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EApEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAY,YAAOC,GAmBzB,OAjBIX,IAAaL,EAASM,MACxBS,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQd,GACN,KAAKL,EAASS,QACZ,OAAOS,EAAEE,cAAcD,GACzB,KAAKnB,EAASW,OACZ,OAAOO,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAKXjB,GACFW,EAAaO,UAGRP,EA4CgBQ,CACnBtB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYrB,IAAaL,EAASS,UAEtCkB,QAASb,KAAKP,kBAPhB,iCAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYrB,IAAaL,EAASW,SAEtCgB,QAASb,KAAKJ,iBAPhB,4BAYA,wBACEe,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAatB,IAEjBuB,QAASb,KAAKF,cAPhB,sBAYER,GAAcC,IAAaL,EAASM,OAElC,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,YAHhB,sBAUN,6BACGE,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,gBA9FhC,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9cd121ed.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((a, b): number => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleAlpabetSort = () => {\n    this.setState(state => ({\n      ...state,\n      sortType: SortType.ALPABET,\n    }));\n  };\n\n  handleLengthSort = () => {\n    this.setState(state => ({\n      ...state,\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      ...state,\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={this.handleAlpabetSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.handleLengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.handleReset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}